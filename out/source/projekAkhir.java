/* autogenerated by Processing revision 1286 on 2022-11-23 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class projekAkhir extends PApplet {

int speed = 5000;
kereta krt = new kereta(0,0);
rumah rmh = new rumah(0,0);

 public void setup() {
    /* size commented out by preprocessor */;
}

 public void draw() {
    background(200);
    fill(50, 100, 150);
    rect(0,930,1920,150);
    translate(width/2,height/2);

    pushMatrix();
        fill(0);
        strokeWeight(1);
        translate(0,200);
        scale(0.5f);
        noFill();
        noStroke();

        krt.kepala(speed,-100);

        for(int i = 500; i <= 2500; i += 500){
            krt.gerbong(speed+i,-100);
        }

        if(speed < -10000){
            speed = 5000;
        }else{
            speed -= 100;   
        }
        
        for(int i = -4000; i <= 3500; i += 500){
            krt.railway(i,0);
        }
    popMatrix();
    
    pushMatrix();
        scale(1);
        rmh.home(-960,540); 
    popMatrix();

    moon();
}

 public void moon(){
    circle(600,-450, 100);
}
public class kereta {
    int locX;
    int locY;

    public kereta(int tlocX, int tlocY){
        locX = tlocX;
        locY = tlocY;
    }
    
     public void gerbong(int locX, int locY){
        fill(240);
        rect(locX,locY,480,120,35,35,10,10);
        fill(100);
        rect(locX+40,locY+20,320,40,5);
        fill(0,200,225);
        for(int i = 45; i < 320; i += 45){
            rect(locX+i,locY+25,40,30,5);
        }
        fill(0,0,255);
        rect(locX,locY+95,480,25,0,0,10,10);
        strokeCap(SQUARE);
        strokeWeight(8);
        stroke(255,0,0);
        line(locX,locY+80,locX+480,locY+80);
        noStroke();
        fill(50,50,50,30);
        rect(locX+375,locY+20,50,100,5);
        fill(0,200,225);
        rect(locX+380,locY+25,40,30,5);
        fill(50);
        rect(locX+480,locY+100,20,10);
    }

     public void kepala(int locX, int locY){
        fill(240);
        rect(locX,locY+75,10,10);

        beginShape();
            vertex(locX+160,locY);
            vertex(locX+160,locY+120);
            vertex(locX+10,locY+120);
            vertex(locX,locY+110);
            vertex(locX,locY+75);
            bezierVertex(locX, locY+50, locX+100, locY, locX+160, locY);
        endShape();

        beginShape();
            fill(0,200,225);
            vertex(locX+140,locY+20);
            vertex(locX+140,locY+65);
            vertex(locX+40,locY+65);
            bezierVertex(locX+40,locY+55,locX+110,locY+20,locX+140,locY+20);
        endShape();

        fill(240);
        rect(locX+160,locY,320,120,0,35,10,10);
        fill(100);
        rect(locX+240,locY+20,185,40,5);
        fill(0,200,225);
        for(int i = 245; i < 400; i += 45){
            rect(locX+i,locY+25,40,30,5);
        }
        fill(0,0,255);
        rect(locX,locY+95,480,25,0,0,10,10);
        strokeCap(SQUARE);
        strokeWeight(8);
        stroke(255,0,0);
        line(locX,locY+80,locX+480,locY+80);
        noStroke();
        fill(50,50,50,30);
        rect(locX+175,locY+20,50,100,5);
        fill(0,200,225);
        rect(locX+180,locY+25,40,30,5);
        fill(50);
        rect(locX+480,locY+100,20,10);
    }

     public void railway(int locX, int locY){
        noStroke();
        fill(120);
        rect(locX,locY,500,15);
        fill(70);
        rect(locX,locY+15,500,10);
        strokeWeight(10);
        stroke(100);
        line(locX+100,locY+25,locX+100,locY+160);
        line(locX+200,locY+25,locX+200,locY+120);
        line(locX+300,locY+25,locX+300,locY+160);

        noFill();
        beginShape();
            vertex(locX,locY+250);
            vertex(locX+100,locY+160);
            vertex(locX+200,locY+120);
            vertex(locX+300,locY+160);
            vertex(locX+400,locY+250);
        endShape();

        noStroke();
        fill(100);
        rect(locX+400,locY+25,100,500);
        fill(85);
        rect(locX+425,locY+25,50,300);
        fill(80);
        rect(locX+390,locY+275,120,60);
        fill(120);
        quad(locX+300,locY+25,locX+400,locY+75,locX+500,locY+75,locX+600,locY+25);

        stroke(80);
        for(int i = 0; i < 500; i += 50){
            line(locX+i,locY-25,locX+i+50,locY);
            line(locX+i,locY,locX+i+50,locY-25);
        }
        noStroke();
        fill(120);
        rect(locX,locY-35,500,10);
    }
}
class rumah {
    int locX;
    int locY;

    public rumah(int tlocX, int tlocY){
        locX = tlocX;
        locY = tlocY;
    }

     public void home(int locX, int locY){
        balcony(locX+400,locY-200);
        building(locX,locY);
        window(locX+50,locY-500);
    }

     public void building(int locX, int locY){
        noStroke();
        fill(20);
        rect(locX,locY,400,-600);
        fill(10);
        rect(locX+350,locY,50,-600);
        fill(10);
        rect(locX,locY-615,420,15);
        fill(20);
        rect(locX,locY-650,430,35);
        fill(10);
        rect(locX,locY-125,420,15);
        fill(30);
        rect(locX,locY-160,430,35);

        // brick effect
        //top
        fill(15);
        rect(locX+60, locY-200, 80, 20);
        rect(locX+250, locY-250, 50, 15);
        rect(locX+260, locY-280, 70, 17);
        rect(locX+240, locY-410, 40, 12);
        rect(locX+140, locY-550, 60, 20);

        // bottom
        rect(locX+100, locY-100, 60, 20);
        rect(locX+120, locY-76, 55, 17);
        rect(locX+270, locY-51, 45, 25);
    }

     public void balcony(int locX, int locY){
        fill(0);
        rect(locX, locY-100, 290, 10);
        rect(locX, locY, 300, 15);
        for(int i = 275; i > 0; i -= 50){
            pattern(locX+i, locY);
        }
        line(locX,locY+40,locX+290, locY+10);
    }

     public void pattern(int locX, int locY){
        noFill();
        stroke(0);
        strokeWeight(5);
        line(locX, locY, locX, locY-90);
        circle(locX-25,locY-65,50);
        quad(locX-25,locY-40,locX,locY-25,locX-25,locY,locX-50,locY-25);
    }

     public void window(int locX, int locY){
        // frame
        fill(60);
        noStroke();
        rect(locX,locY,150,225);
        
        // light
        fill(255, 225, 100);
        rect(locX+12.5f,locY+12.5f,125,200);

        // reflections
        pushMatrix();
            translate(12.5f,0);
            fill(250,250,250,200);
            noStroke();
            // top
            beginShape();
                vertex(locX,locY+50);
                vertex(locX,locY+90);
                vertex(locX+125,locY+170);
                vertex(locX+125,locY+140);
            endShape(CLOSE);
            // bottom
            beginShape();
                vertex(locX,locY+100);
                vertex(locX,locY+110);
                vertex(locX+125,locY+190);
                vertex(locX+125,locY+180);
            endShape(CLOSE);
        popMatrix();

        // grille
        fill(60);
        rect(locX+65,locY,20,225);
        rect(locX,locY+75,150,20);

        // sill
        fill(40);
        rect(locX-15,locY+225,180,20);
        fill(5);
        rect(locX-10,locY+245,170,10);
    }
}


  public void settings() { size(1920, 1080); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "projekAkhir" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
